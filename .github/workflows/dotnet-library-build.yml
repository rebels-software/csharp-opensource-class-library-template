name: Build and test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: "5.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-restore --verbosity normal --collect:"XPlat Code Coverage"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODE_COV_TOKEN }}

      - name: Get version from csproj
        id: version
        run: |
          [xml]$proj = Get-Content MyProject.csproj
          $version = $proj.Project.PropertyGroup.Version
          echo "PACKAGE_VERSION=$version" >> $env:GITHUB_ENV
          echo "Wersja paczki: $version"

      - name: Create git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ env.PACKAGE_VERSION }}
          git push origin v${{ env.PACKAGE_VERSION }}

      - name: Conditional Packing (nuspec or csproj)
        run: |
          if (Test-Path -Path "*.nuspec") {
            Write-Host "Packing using .nuspec file..."
            nuget pack (Get-ChildItem -Path "*.nuspec") -OutputDirectory artifacts -NoDefaultExcludes -Version ${{ env.PACKAGE_VERSION }}
          } else {
            Write-Host "Packing using .csproj file..."
            dotnet pack -c Release --no-build --output artifacts
          }

      - name: Publish to NuGet
        run: nuget push artifacts\*.nupkg -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json -SkipDuplicate

